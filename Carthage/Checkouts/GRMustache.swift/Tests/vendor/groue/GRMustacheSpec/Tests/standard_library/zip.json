{
  "tests": [
    {
      "name": "`zip` iterates its collection arguments in the same time, as many times as there are elements in the longest collection.",
      "data": {
        "names": [{"name":"Alice", "o": "n"}, {"name":"Bob", "o": "n"}, {"name":"Craig", "o": "n"}],
        "ages": [{"age":30, "o": "a"}, {"age":25, "o": "a"}],
        "hair": [{"hair":"brown", "o": "h"}, {"hair":"silver", "o": "h"}, {"hair":"dark", "o": "h"}]},
      "template": "{{# zip(hair, names, ages) }}{{ name }} ({{ o }}) is {{ age }} years old and has {{ hair}} hair. {{/}}",
      "expected": "Alice (a) is 30 years old and has brown hair. Bob (a) is 25 years old and has silver hair. Craig (n) is  years old and has dark hair. "
    },
    {
      "name": "`zip` iterates its collection arguments in the same time, as many times as there are elements in the longest collection.",
      "data": {
        "names": [{"name":"Alice", "o": "n"}, {"name":"Bob", "o": "n"}, {"name":"Craig", "o": "n"}],
        "ages": [{"age":30, "o": "a"}, {"age":25, "o": "a"}],
        "hair": [{"hair":"brown", "o": "h"}, {"hair":"silver", "o": "h"}, {"hair":"dark", "o": "h"}]},
      "template": "{{# zip(ages, names, hair) }}{{ name }} ({{ o }}) is {{ age }} years old and has {{ hair}} hair. {{/}}",
      "expected": "Alice (h) is 30 years old and has brown hair. Bob (h) is 25 years old and has silver hair. Craig (h) is  years old and has dark hair. "
    },
    {
      "name": "`zip` renders an error when provided with something else than a collection.",
      "data": {
        "nonArray": "blah"
      },
      "template": "{{# zip(nonArray) }}...{{/}}",
      "expected_error": "Non-enumerable argument in zip filter"
    },
    {
      "name": "`zip` preserves the boolean value of empty arrays.",
      "data": {
        "emptyArray": []
      },
      "template": "{{# zip(emptyArray, emptyArray) }}---{{/}}{{^ zip(emptyArray, emptyArray) }}+++{{/}}",
      "expected": "+++"
    },
    {
      "name": "`each` and `zip` filters can chain.",
      "data": {
        "array1": [{"name": "Alice"}, {"name": "Bob"}],
        "array2": [{"age": 20}, {"age": 30}]
      },
      "template": "{{# each(zip(array1, array2)) }}{{^ @first }}, {{/}}{{ @index }}:({{ name }}, {{ age }}){{/}}",
      "expected" :"0:(Alice, 20), 1:(Bob, 30)"
    }
  ]
}
